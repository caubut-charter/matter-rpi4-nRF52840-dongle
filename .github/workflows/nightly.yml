name: NIGHTLY

on:
  push:
    branches: [ chore/submodule-cleanup ]
  # TODO CRON

jobs:
  #   build-avahi-utils:
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: actions/checkout@v2
  #       - uses: docker/setup-qemu-action@v1
  #       - uses: docker/setup-buildx-action@v1
  #         id: buildx
  #         with:
  #           version: latest
  #       - uses: docker/login-action@v1
  #         with:
  #           username: ${{ secrets.DOCKERHUB_USERNAME }}
  #           password: ${{ secrets.DOCKERHUB_TOKEN }}
  #       - run: |
  #           DOCKER_BUILD="docker buildx build --platform linux/amd64,linux/arm64 --push" \
  #             ORG="${{ secrets.DOCKERHUB_USERNAME }}" \
  #             VERSION=nightly \
  #             DOCKER_BUILDKIT=1 ./scripts/docker-build --avahi-utils
  #
  #   build-chip-environment:
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: actions/checkout@v2
  #       - uses: docker/setup-qemu-action@v1
  #       - uses: docker/setup-buildx-action@v1
  #         id: buildx
  #         with:
  #           version: latest
  #       - uses: docker/login-action@v1
  #         with:
  #           username: ${{ secrets.DOCKERHUB_USERNAME }}
  #           password: ${{ secrets.DOCKERHUB_TOKEN }}
  #       - run: |
  #           DOCKER_BUILD='docker buildx build --platform linux/amd64,linux/arm64 --push' \
  #             ORG="${{ secrets.DOCKERHUB_USERNAME }}" \
  #             VERSION=nightly \
  #             DOCKER_BUILDKIT=1 ./scripts/docker-build --chip-environment
  #
  #   build-otbr:
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: actions/checkout@v2
  #       - uses: docker/setup-qemu-action@v1
  #       - uses: docker/setup-buildx-action@v1
  #         id: buildx
  #         with:
  #           version: latest
  #       - uses: docker/login-action@v1
  #         with:
  #           username: ${{ secrets.DOCKERHUB_USERNAME }}
  #           password: ${{ secrets.DOCKERHUB_TOKEN }}
  #       - run: ./scripts/setup -u -o ^OT_BR_POSIX
  #       - run: |
  #           DOCKER_BUILD="docker buildx build --platform linux/amd64,linux/arm64 --push" \
  #             ORG="${{ secrets.DOCKERHUB_USERNAME }}" \
  #             VERSION=nightly \
  #             DOCKER_BUILDKIT=1 ./scripts/docker-build --otbr
  #
  #   build-ot-commissioner:
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: actions/checkout@v2
  #       - uses: docker/setup-qemu-action@v1
  #       - uses: docker/setup-buildx-action@v1
  #         id: buildx
  #         with:
  #           version: latest
  #       - uses: docker/login-action@v1
  #         with:
  #           username: ${{ secrets.DOCKERHUB_USERNAME }}
  #           password: ${{ secrets.DOCKERHUB_TOKEN }}
  #       - run: ./scripts/setup -u -o ^OT_COMMISSIONER
  #       - run: |
  #           DOCKER_BUILD="docker buildx build --platform linux/amd64,linux/arm64 --push" \
  #             ORG="${{ secrets.DOCKERHUB_USERNAME }}" \
  #             VERSION=nightly \
  #             DOCKER_BUILDKIT=1 ./scripts/docker-build --ot-commissioner
  #
  #   build-ot-nrf528xx-environment:
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: actions/checkout@v2
  #       - uses: docker/setup-qemu-action@v1
  #       - uses: docker/setup-buildx-action@v1
  #         id: buildx
  #         with:
  #           version: latest
  #       - uses: docker/login-action@v1
  #         with:
  #           username: ${{ secrets.DOCKERHUB_USERNAME }}
  #           password: ${{ secrets.DOCKERHUB_TOKEN }}
  #       - run: ./scripts/setup -u -o ^OT_NRF528XX
  #       - run: |
  #           DOCKER_BUILD='docker buildx build --platform linux/amd64,linux/arm64 --push' \
  #             ORG=${{ secrets.DOCKERHUB_USERNAME }} \
  #             VERSION=nightly \
  #             DOCKER_BUILDKIT=1 ./scripts/docker-build --ot-nrf528xx-environment
  #
  #   build-nrfconnect-chip:
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: actions/checkout@v2
  #       - uses: docker/setup-qemu-action@v1
  #       - uses: docker/setup-buildx-action@v1
  #         id: buildx
  #         with:
  #           version: latest
  #       - uses: docker/login-action@v1
  #         with:
  #           username: ${{ secrets.DOCKERHUB_USERNAME }}
  #           password: ${{ secrets.DOCKERHUB_TOKEN }}
  #       - run: ./scripts/setup -u -o ^NRFCONNECT_CHIP_DOCKER
  #       - run: |
  #           DOCKER_BUILD='docker buildx build --platform linux/amd64,linux/arm64 --push' \
  #             ORG="${{ secrets.DOCKERHUB_USERNAME }}" \
  #             VERSION=nightly \
  #             DOCKER_BUILDKIT=1 ./scripts/docker-build --nrfconnect-chip
  #
  #   build-nrfutil:
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: actions/checkout@v2
  #       - uses: docker/setup-qemu-action@v1
  #       - uses: docker/setup-buildx-action@v1
  #         id: buildx
  #         with:
  #           version: latest
  #       - uses: docker/login-action@v1
  #         with:
  #           username: ${{ secrets.DOCKERHUB_USERNAME }}
  #           password: ${{ secrets.DOCKERHUB_TOKEN }}
  #       - run: |
  #           DOCKER_BUILD="docker buildx build --platform linux/amd64,linux/arm64 --push" \
  #             ORG="${{ secrets.DOCKERHUB_USERNAME }}" \
  #             VERSION=nightly \
  #             DOCKER_BUILDKIT=1 ./scripts/docker-build --nrfutil
  #delete-last-nightly-release:
  #  #     needs:
  #  #       - build-ot-nrf528xx-environment
  #  #       - build-nrfconnect-chip
  #  #       - build-chip-environment
  #  #       - build-nrfutil
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: dev-drprasad/delete-tag-and-release@v0.2.0
  #      with:
  #        delete_release: true
  #        tag_name: nightly
  #      env:
  #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-nrf52840-dongle-ot-rcp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-output name=date::$(date -u +'%Y-%m-%d')"
        id: date
      - run: ./scripts/setup -u -o ^OT_NRF528XX
      - run: |
          docker run --rm \
           -v $PWD/third_party/ot-nrf528xx:/ot-nrf528xx \
           -v $PWD/build/ot-nrf528xx:/ot-nrf528xx/build \
           -w /ot-nrf528xx \
           ${{ secrets.DOCKERHUB_USERNAME }}/ot-nrf528xx-environment:nightly /bin/bash -c \
          './script/bootstrap '\
          '&& script/build nrf52840 USB_trans -DOT_BOOTLOADER=USB -DOT_THREAD_VERSION=1.2 '\
          '&& arm-none-eabi-objcopy -O ihex build/bin/ot-rcp build/bin/nrf52840-dongle-ot-rcp.hex'
      - run: |
          docker run --rm \
           -v $PWD/build/ot-nrf528xx/bin:/root \
           ${{ secrets.DOCKERHUB_USERNAME }}/nrfutil:nightly pkg generate --hw-version 52 --sd-req=0x00 \
           --application nrf52840-dongle-ot-rcp.hex --application-version 1 nrf52840-dongle-ot-rcp.zip
      - uses: actions/upload-artifact@v2
        with:
          name: nrf52840-dongle-ot-rcp
          path: build/ot-nrf528xx/bin/nrf52840-dongle-ot-rcp.zip
          retention-days: 1

  build-nrf52840-dongle-thread-lighting-app-latest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-output name=date::$(date -u +'%Y-%m-%d')"
        id: date
      - run: ./scripts/setup -u -o ^CONNECTEDHOMEIP
      - run: |
          docker run --rm \
           -e CHIP_REVISION=$(cd third_party/connectedhomeip && git rev-parse --short HEAD) \
           -v $PWD/third_party/connectedhomeip:/var/chip \
           -v $PWD/build/nrf-sdk:/var/ncs \
           -v $PWD/build/nrf52840-dongle-thread-lighting-app/nrfconnect:/var/chip/examples/lighting-app/nrfconnect/build \
           ${{ secrets.DOCKERHUB_USERNAME }}/nrfconnect-chip:nightly \
          'setup -y '\
          '&& python3 scripts/setup/nrfconnect/update_ncs.py --update '\
          '&& cd examples/lighting-app/nrfconnect '\
          '&& west build -b nrf52840dongle_nrf52840'
      - run: |
          docker run --rm \
           -v $PWD/build/nrf52840-dongle-thread-lighting-app/nrfconnect/zephyr:/root \
           ${{ secrets.DOCKERHUB_USERNAME }}/nrfutil:nightly pkg generate --hw-version 52 --sd-req=0x00 \
           --application zephyr.hex --application-version 1 nrf52840-dongle-thread-lighting-app-LATEST.zip
      - uses: actions/upload-artifact@v2
        with:
          name: nrf52840-dongle-thread-lighting-app-latest
          path: build/nrf52840-dongle-thread-lighting-app/nrfconnect/zephyr/nrf52840-dongle-thread-lighting-app-LATEST.zip
          retention-days: 1

  build-nrf52840-dongle-thread-lighting-app-test_event:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-output name=date::$(date -u +'%Y-%m-%d')"
        id: date
      - run: CHIP_BRANCH=test_event_6 ./scripts/setup -u -o ^CONNECTEDHOMEIP
      - run: |
          docker run --rm \
           -e CHIP_REVISION=$(cd third_party/connectedhomeip && git rev-parse --short HEAD) \
           -v $PWD/third_party/connectedhomeip:/var/chip \
           -v $PWD/build/nrf-sdk:/var/ncs \
           -v $PWD/build/nrf52840-dongle-thread-lighting-app/nrfconnect:/var/chip/examples/lighting-app/nrfconnect/build \
           ${{ secrets.DOCKERHUB_USERNAME }}/nrfconnect-chip:nightly \
          'setup -y '\
          '&& python3 scripts/setup/nrfconnect/update_ncs.py --update '\
          '&& cd examples/lighting-app/nrfconnect '\
          '&& west build -b nrf52840dongle_nrf52840'
      - run: |
          docker run --rm \
           -v $PWD/build/nrf52840-dongle-thread-lighting-app/nrfconnect/zephyr:/root \
           ${{ secrets.DOCKERHUB_USERNAME }}/nrfutil:nightly pkg generate --hw-version 52 --sd-req=0x00 \
           --application zephyr.hex --application-version 1 nrf52840-dongle-thread-lighting-app-TEST_EVENT_6.zip
      - uses: actions/upload-artifact@v2
        with:
          name: nrf52840-dongle-thread-lighting-app-test_event
          path: build/nrf52840-dongle-thread-lighting-app/nrfconnect/zephyr/nrf52840-dongle-thread-lighting-app-TEST_EVENT_6.zip
          retention-days: 1

  build-chip-device-ctrl-x86_64-latest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-output name=date::$(date -u +'%Y-%m-%d')"
        id: date
      - run: ./scripts/setup -u -o ^CONNECTEDHOMEIP
      - run: |
          docker run --rm --entrypoint /bin/bash \
           -v $PWD/third_party/connectedhomeip:/connectedhomeip \
           -v $PWD/build/chip-device-ctrl:/connectedhomeip/out \
           ${{ secrets.DOCKERHUB_USERNAME }}/chip-environment:nightly -c \
          'scripts/build_python.sh -m platform'
      - run: (cd build && sudo tar -cJf chip-device-ctrl-x86_64-LATEST.tar.xz --owner=0 --group=0 chip-device-ctrl)
      - uses: actions/upload-artifact@v2
        with:
          name: chip-device-ctrl-x86_64-latest
          path: build/chip-device-ctrl-x86_64-LATEST.tar.xz
          retention-days: 1

  build-chip-device-ctrl-aarch64-latest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - run: echo "::set-output name=date::$(date -u +'%Y-%m-%d')"
        id: date
      - run: ./scripts/setup -u -o ^CONNECTEDHOMEIP
      - run: docker pull --platform linux/aarch64 ${{ secrets.DOCKERHUB_USERNAME }}/chip-environment:nightly
      - run: |
          docker run --rm --entrypoint /bin/bash \
           -v $PWD/third_party/connectedhomeip:/connectedhomeip \
           -v $PWD/build/chip-device-ctrl:/connectedhomeip/out \
           ${{ secrets.DOCKERHUB_USERNAME }}/chip-environment:nightly -c \
          'scripts/build_python.sh -m platform'
      - run: (cd build && sudo tar -cJf chip-device-ctrl-aarch64-LATEST.tar.xz --owner=0 --group=0 chip-device-ctrl)
      - uses: actions/upload-artifact@v2
        with:
          name: chip-device-ctrl-aarch64-latest
          path: build/chip-device-ctrl-aarch64-LATEST.tar.xz
          retention-days: 1

  build-chip-device-ctrl-x86_64-test_event:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-output name=date::$(date -u +'%Y-%m-%d')"
        id: date
      - run: CHIP_BRANCH=test_event_6 ./scripts/setup -u -o ^CONNECTEDHOMEIP
      - run: |
          docker run --rm --entrypoint /bin/bash \
           -v $PWD/third_party/connectedhomeip:/connectedhomeip \
           -v $PWD/build/chip-device-ctrl:/connectedhomeip/out \
           ${{ secrets.DOCKERHUB_USERNAME }}/chip-environment:nightly -c \
          'scripts/build_python.sh -m platform'
      - run: (cd build && sudo tar -cJf chip-device-ctrl-x86_64-TEST_EVENT_6.tar.xz --owner=0 --group=0 chip-device-ctrl)
      - uses: actions/upload-artifact@v2
        with:
          name: chip-device-ctrl-x86_64-test_event
          path: build/chip-device-ctrl-x86_64-TEST_EVENT_6.tar.xz
          retention-days: 1

  build-chip-device-ctrl-aarch64-test_event:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - run: echo "::set-output name=date::$(date -u +'%Y-%m-%d')"
        id: date
      - run: CHIP_BRANCH=test_event_6 ./scripts/setup -u -o ^CONNECTEDHOMEIP
      - run: docker pull --platform linux/aarch64 ${{ secrets.DOCKERHUB_USERNAME }}/chip-environment:nightly
      - run: |
          docker run --rm --entrypoint /bin/bash \
           -v $PWD/third_party/connectedhomeip:/connectedhomeip \
           -v $PWD/build/chip-device-ctrl:/connectedhomeip/out \
           ${{ secrets.DOCKERHUB_USERNAME }}/chip-environment:nightly -c \
          'scripts/build_python.sh -m platform'
      - run: (cd build && sudo tar -cJf chip-device-ctrl-aarch64-TEST_EVENT_6.tar.xz --owner=0 --group=0 chip-device-ctrl)
      - uses: actions/upload-artifact@v2
        with:
          name: chip-device-ctrl-aarch64-test_event
          path: build/chip-device-ctrl-aarch64-TEST_EVENT_6.tar.xz
          retention-days: 1

  publish-release:
    needs:
      - build-nrf52840-dongle-ot-rcp
      - build-nrf52840-dongle-thread-lighting-app-latest
      - build-nrf52840-dongle-thread-lighting-app-test_event
      - build-chip-device-ctrl-x86_64-latest
      - build-chip-device-ctrl-aarch64-latest
      - build-chip-device-ctrl-x86_64-test_event
      - build-chip-device-ctrl-aarch64-test_event
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: nrf52840-dongle-ot-rcp
          path: release/nrf52840-dongle-ot-rcp.zip
      - uses: actions/download-artifact@v2
        with:
          name: nrf52840-dongle-thread-lighting-app-latest
          path: release/nrf52840-dongle-thread-lighting-app-LATEST.zip
      - uses: actions/download-artifact@v2
        with:
          name: nrf52840-dongle-thread-lighting-app-test_event
          path: release/nrf52840-dongle-thread-lighting-app-TEST_EVENT_6.zip
      - uses: actions/download-artifact@v2
        with:
          name: chip-device-ctrl-x86_64-latest
          path: release/chip-device-ctrl-x86_64-LATEST.tar.xz
      - uses: actions/download-artifact@v2
        with:
          name: chip-device-ctrl-aarch64-latest
          path: release/chip-device-ctrl-aarch64-LATEST.tar.xz
      - uses: actions/download-artifact@v2
        with:
          name: chip-device-ctrl-x86_64-test_event
          path: release/chip-device-ctrl-x86_64-TEST_EVENT_6.tar.xz
      - uses: actions/download-artifact@v2
        with:
          name: chip-device-ctrl-aarch64-test_event
          path: release/chip-device-ctrl-aarch64-TEST_EVENT_6.tar.xz
      - uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.date.outputs.date }}
          file: release/*
          tag: nightly
          overwrite: true
          file_glob: true
      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.date.outputs.date }}
          file: release/*
          tag: nightly-${{ steps.date.outputs.date }}
          overwrite: true
          file_glob: true
      - uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 15 # two weeks + latest nightly
          delete_tag_pattern: nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
