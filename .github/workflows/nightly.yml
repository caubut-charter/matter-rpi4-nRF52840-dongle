name: ðŸŒ  nightly

on:
  push:
    branches: [ main ]
  schedule:
    - cron:  '0 0 * * *'

jobs:
  build-ot-nrf528xx-environment-image:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ”ƒ Checkout
        uses: actions/checkout@v3

      - name: âš™ Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: âš™ Setup Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          version: latest

      - name: ðŸ”“ Authenticate docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: ðŸ¥¾ Bootstrap
        run: script/bootstrap --nrf52840-dongle-ot-rcp

      - name: ðŸ›  Build image
        run: |
          DOCKER_BUILD='docker buildx build --platform linux/amd64,linux/arm64 --push' \
            DOCKER_IMAGE_PREFIX=${{ secrets.DOCKERHUB_USERNAME }} \
            DOCKER_BUILDKIT=1 script/setup --ot-nrf528xx-environment-image

  build-ot-commissioner-image:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ”ƒ Checkout
        uses: actions/checkout@v3

      - name: âš™ Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: âš™ Setup Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          version: latest

      - name: ðŸ”“ Authenticate docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: ðŸ¥¾ Bootstrap
        run: script/bootstrap --ot-commissioner

      - name: ðŸ›  Build image
        run: |
          DOCKER_BUILD="docker buildx build --platform linux/amd64,linux/arm64 --push" \
            DOCKER_IMAGE_PREFIX="${{ secrets.DOCKERHUB_USERNAME }}" \
            DOCKER_BUILDKIT=1 script/setup --ot-commissioner-image

  build-nrfconnect-chip-environment-image:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ”ƒ Checkout
        uses: actions/checkout@v3

      - name: âš™ Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: âš™ Setup Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          version: latest

      - name: ðŸ”“ Authenticate docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: ðŸ¥¾ Bootstrap
        run: script/bootstrap --nrfconnect-chip

      - name: ðŸ›  Build image
        run: |
            DOCKER_BUILD='docker buildx build --platform linux/amd64,linux/arm64 --push' \
              DOCKER_IMAGE_PREFIX="${{ secrets.DOCKERHUB_USERNAME }}" \
              DOCKER_BUILDKIT=1 script/setup \
              --nrfconnect-toolchain-image \
              --nrfconnect-chip-environment-image

  build-nrfutil-image:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ”ƒ Checkout
        uses: actions/checkout@v3

      - name: âš™ Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: âš™ Setup Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          version: latest

      - name: ðŸ”“ Authenticate docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: ðŸ›  Build image
        run: |
            DOCKER_BUILD="docker buildx build --platform linux/amd64,linux/arm64 --push" \
              DOCKER_IMAGE_PREFIX="${{ secrets.DOCKERHUB_USERNAME }}" \
              DOCKER_BUILDKIT=1 script/setup --nrfutil-image

  build-nrf52840-dongle-ot-rcp:
    needs:
      - build-ot-nrf528xx-environment-image
      - build-nrfutil-image
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ”ƒ Checkout
        uses: actions/checkout@v3

      - name: ðŸ¥¾ Bootstrap
        run: script/bootstrap --nrf52840-dongle-ot-rcp

      - name: ðŸ›  Build artifact
        run: DOCKER_IMAGE_PREFIX="${{ secrets.DOCKERHUB_USERNAME }}" script/setup --nrf52840-dongle-ot-rcp

      - name: â¬† Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nrf52840-dongle-ot-rcp
          path: build/Release/nrf52840-dongle-ot-rcp.zip

  build-nrf52840-dongle-thread-lighting-app-latest:
    needs:
      - build-nrfconnect-chip-environment-image
      - build-nrfutil-image
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ”ƒ Checkout
        uses: actions/checkout@v3

      - name: ðŸ¥¾ Bootstrap
        run: script/bootstrap --chip

      - name: ðŸ›  Build artifact
        run: DOCKER_IMAGE_PREFIX="${{ secrets.DOCKERHUB_USERNAME }}" script/setup --nrf52840-dongle-thread-lighting-app

      - name: ðŸ”– Rename artifact
        run: mv nrf52840-dongle-thread-lighting-app.zip nrf52840-dongle-thread-lighting-app-LATEST.zip
        working-directory: build/Release

      - name: â¬† Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nrf52840-dongle-thread-lighting-app-latest
          path: build/Release/nrf52840-dongle-thread-lighting-app-LATEST.zip

  build-nrf52840-dongle-thread-lighting-app-release-latest:
    needs:
      - build-nrfconnect-chip-environment-image
      - build-nrfutil-image
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ”ƒ Checkout
        uses: actions/checkout@v3

      - name: ðŸ¥¾ Bootstrap
        run: script/bootstrap --chip

      - name: ðŸ›  Build artifact
        run: DOCKER_IMAGE_PREFIX="${{ secrets.DOCKERHUB_USERNAME }}" script/setup --nrf52840-dongle-thread-lighting-app-release

      - name: ðŸ”– Rename artifact
        run: mv nrf52840-dongle-thread-lighting-app-release.zip nrf52840-dongle-thread-lighting-app-release-LATEST.zip
        working-directory: build/Release

      - name: â¬† Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nrf52840-dongle-thread-lighting-app-release-latest
          path: build/Release/nrf52840-dongle-thread-lighting-app-release-LATEST.zip

  build-nrf52840-dongle-thread-lighting-app-with-cli-latest:
    needs:
      - build-nrfconnect-chip-environment-image
      - build-nrfutil-image
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ”ƒ Checkout
        uses: actions/checkout@v3

      - name: ðŸ¥¾ Bootstrap
        run: script/bootstrap --chip

      - name: ðŸ›  Build artifact
        run: DOCKER_IMAGE_PREFIX="${{ secrets.DOCKERHUB_USERNAME }}" script/setup --nrf52840-dongle-thread-lighting-app-with-cli

      - name: ðŸ”– Rename artifact
        run: mv nrf52840-dongle-thread-lighting-app-with-cli.zip nrf52840-dongle-thread-lighting-app-with-cli-LATEST.zip
        working-directory: build/Release

      - name: â¬† Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nrf52840-dongle-thread-lighting-app-with-cli-latest
          path: build/Release/nrf52840-dongle-thread-lighting-app-with-cli-LATEST.zip

  build-nrf52840-dongle-thread-lighting-app-test_event:
    needs:
      - build-nrfconnect-chip-environment-image
      - build-nrfutil-image
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ”ƒ Checkout
        uses: actions/checkout@v3

      - name: ðŸ¥¾ Bootstrap
        run: script/bootstrap --chip test_event_7

      - name: ðŸ›  Build artifact
        run: DOCKER_IMAGE_PREFIX="${{ secrets.DOCKERHUB_USERNAME }}" script/setup --nrf52840-dongle-thread-lighting-app

      - name: ðŸ”– Rename artifact
        run: mv nrf52840-dongle-thread-lighting-app.zip nrf52840-dongle-thread-lighting-app-TEST_EVENT_7.zip
        working-directory: build/Release

      - name: â¬† Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nrf52840-dongle-thread-lighting-app-test_event
          path: build/Release/nrf52840-dongle-thread-lighting-app-TEST_EVENT_7.zip

  build-nrf52840-dongle-thread-lighting-app-with-cli-test_event:
    needs:
      - build-nrfconnect-chip-environment-image
      - build-nrfutil-image
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ”ƒ Checkout
        uses: actions/checkout@v3

      - name: ðŸ¥¾ Bootstrap
        run: script/bootstrap --chip test_event_7

      - name: ðŸ›  Build artifact
        run: DOCKER_IMAGE_PREFIX="${{ secrets.DOCKERHUB_USERNAME }}" script/setup --nrf52840-dongle-thread-lighting-app-with-cli

      - name: ðŸ”– Rename artifact
        run: mv nrf52840-dongle-thread-lighting-app-with-cli.zip nrf52840-dongle-thread-lighting-app-with-cli-TEST_EVENT_7.zip
        working-directory: build/Release

      - name: â¬† Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nrf52840-dongle-thread-lighting-app-with-cli-test_event
          path: build/Release/nrf52840-dongle-thread-lighting-app-with-cli-TEST_EVENT_7.zip

  publish-release:
    needs:
      - build-nrf52840-dongle-ot-rcp
      - build-nrf52840-dongle-thread-lighting-app-latest
      - build-nrf52840-dongle-thread-lighting-app-release-latest
      - build-nrf52840-dongle-thread-lighting-app-with-cli-latest
      - build-nrf52840-dongle-thread-lighting-app-test_event
      - build-nrf52840-dongle-thread-lighting-app-with-cli-test_event
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“† Get date
        run: echo "::set-output name=date::$(date -u +'%Y-%m-%d')"
        id: date

      - name: â¬‡ Download artifacts
        uses: actions/download-artifact@v3
        with:
           path: artifacts

      - name: â†© Flatten artifacts
        run: |
          find artifacts -type f -exec mv {} artifacts \;
          find artifacts -depth -exec rmdir {} \;
          ls -laR

      - name: ðŸ—‘ Delete current nightly
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ðŸš€ Publish nightly
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.date.outputs.date }}
          file: artifacts/*
          tag: nightly
          file_glob: true
          overwrite: true
