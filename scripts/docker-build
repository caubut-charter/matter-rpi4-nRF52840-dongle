#!/usr/bin/env bash

ARCH=$(uname -m)

if [[ $ARCH != "x86_64" && $ARCH != "aarch64" ]]; then
  echo "Unsupported architecture: $ARCH"
  exit 1;
fi

while [ $# -gt 0 ] ; do
  case $1 in
    --avahi/avahi-utils) AVAHI_AVAHI_UTILS=true ;;
    --matter/environment) MATTER_ENVIRONMENT=true ;;
    --openthread/environment) OPENTHREAD_ENVIRONMENT=true ;;
    --openthread/ot-commissioner) OPENTHREAD_OT_COMMISSIONER=true ;;
    --openthread/otbr) OPENTHREAD_OTBR=true ;;
    --nordicsemi/nrfconnect-chip) NORDICSEMI_NRFCONNECT_CHIP=true ;;
    --nordicsemi/nrfutil) NORDICSEMI_NRFUTIL=true ;;
  esac
  shift
done

(
  cd "$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
  cd ..

  if [[ $AVAHI_AVAHI_UTILS ]]; then
    (set -x && docker build -t avahi/avahi-utils:latest etc/docker/avahi/avahi-utils)
  fi

  if [[ $OPENTHREAD_ENVIRONMENT || $OPENTHREAD_OT_COMMISSIONER ]]; then
    (cd third_party/connectedhomeip/third_party/openthread/repo && git reset --hard)
    if [[ $ARCH = "aarch64" ]]; then
      sed -i '/python3 -m pip install -U cmake/i \    && python3 -m pip install --upgrade pip \\' \
        third_party/connectedhomeip/third_party/openthread/repo/etc/docker/environment/Dockerfile
    fi;
    (cd third_party/connectedhomeip/third_party/openthread/repo \
      && set -x && docker build -t openthread/environment:latest -f etc/docker/environment/Dockerfile .)
  fi

  if [[ $OPENTHREAD_OT_COMMISSIONER ]]; then
    (set -x && docker build -t openthread/ot-commissioner:latest etc/docker/openthread/ot-commissioner)
  fi

  if [[ $OPENTHREAD_OTBR ]]; then
    (cd third_party/ot-br-posix \
       && set -x && docker build --build-arg INFRA_IF_NAME=eth1 -t openthread/otbr:latest -f etc/docker/Dockerfile .)
  fi

  if [[ $MATTER_ENVIRONMENT ]]; then
    (set -x && docker build -t matter/environment:latest etc/docker/matter/environment)
  fi

  if [[ $NORDICSEMI_NRFCONNECT_CHIP ]]; then
    (cd third_party/nrfconnect-chip-docker && git reset --hard)

    sed -i \
      -e '44,52d' \
      -e "s/x86_64/${ARCH}/" \
      -e '/NRF_TOOLS_URL/d' \
      -e 's/gcc-arm-none-eabi-9-2019-q4-major/gcc-arm-none-eabi-9-2020-q2-update/' \
      third_party/nrfconnect-chip-docker/nrfconnect-toolchain/Dockerfile
    if [[ $ARCH = "aarch64" ]]; then
      sed -i \
        -e 's/\(libpython3-dev\) \\/\1 make \\/' \
        third_party/nrfconnect-chip-docker/nrfconnect-toolchain/Dockerfile
    fi;
    (set -x && DOCKER_BUILD_ARGS="--build-arg TOOLCHAIN_URL=https://developer.arm.com/-/media/Files/downloads/gnu-rm/9-2020q2/gcc-arm-none-eabi-9-2020-q2-update-${ARCH}-linux.tar.bz2" \
      third_party/nrfconnect-chip-docker/nrfconnect-toolchain/build.sh --org nordicsemi)

    if [[ $ARCH = "aarch64" ]]; then
      sed -i \
        -e 's/amd64/arm64/' \
        -e 's/g++-multilib //' \
        third_party/nrfconnect-chip-docker/nrfconnect-chip/Dockerfile
    fi;
    (set -x && third_party/nrfconnect-chip-docker/nrfconnect-chip/build.sh --org nordicsemi)
  fi

  if [[ $NORDICSEMI_NRFUTIL ]]; then
    (set -x && docker build -t nordicsemi/nrfutil:latest etc/docker/nordicsemi/nrfutil)
  fi
)
